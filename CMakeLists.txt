if(CMAKE_BUILD_TYPE STREQUAL "Debug" OR CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
    list(APPEND NTSH_COMMON_DEFINES NTSH_DEBUG)
else()
    list(APPEND NTSH_COMMON_DEFINES NTSH_RELEASE)
endif()

if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    list(APPEND NTSH_COMMON_DEFINES NTSH_COMPILER_GCC)
elseif(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
    list(APPEND NTSH_COMMON_DEFINES NTSH_COMPILER_CLANG)
elseif(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    list(APPEND NTSH_COMMON_DEFINES NTSH_COMPILER_MSVC)
else()
    message(WARNING "Using an untested compiler '${CMAKE_CXX_COMPILER_ID}'. "
        "Consider using GCC, Clang or MSVC.")
    list(APPEND NTSH_COMMON_DEFINES NTSH_COMPILER_UNKNOWN)
endif()

if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    list(APPEND NTSH_COMMON_DEFINES NTSH_OS_WINDOWS _CRT_SECURE_NO_WARNINGS NOMINMAX)
elseif(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    list(APPEND NTSHDEFINES NTSH_OS_LINUX)
elseif(CMAKE_SYSTEM_NAME STREQUAL "Darwin")
    list(APPEND NTSH_COMMON_DEFINES NTSH_OS_MACOS)
endif()

set(NTSH_DEFINES ${NTSH_COMMON_DEFINES} PARENT_SCOPE)

add_library(Common INTERFACE)
target_include_directories(Common INTERFACE .)
add_library(NutshellEngine::Common ALIAS Common)